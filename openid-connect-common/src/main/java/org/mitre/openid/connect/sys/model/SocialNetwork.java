package org.mitre.openid.connect.sys.model;



import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;

/**
 * SocialNetwork generated by hbm2java
 */
@Entity
@Table(name="SYS_M_SOCIAL_NETWORK"
)
public class SocialNetwork  implements java.io.Serializable {


     private Long idSocialNetwork;
     private SocialNetworkType socialNetworkType;
     private User user;
     private String socialProfileId;
     private String socialOauthToken;
     private String socialOauthSecretToken;
     private String socialAccountName;
     private String emailSocialAccount;
     private String status;
     private Date createDate;
     private String createUser;
     private Date updateDate;
     private String updateUser;
     private List<UserMapSocialNetwork> userMapSocialNetworks = new ArrayList<UserMapSocialNetwork>(0);

    public SocialNetwork() {
    }

    public SocialNetwork(SocialNetworkType socialNetworkType, User user, String socialProfileId, String socialOauthToken, String socialOauthSecretToken, String socialAccountName, String emailSocialAccount, String status, Date createDate, String createUser, Date updateDate, String updateUser, List<UserMapSocialNetwork> userMapSocialNetworks) {
       this.socialNetworkType = socialNetworkType;
       this.user = user;
       this.socialProfileId = socialProfileId;
       this.socialOauthToken = socialOauthToken;
       this.socialOauthSecretToken = socialOauthSecretToken;
       this.socialAccountName = socialAccountName;
       this.emailSocialAccount = emailSocialAccount;
       this.status = status;
       this.createDate = createDate;
       this.createUser = createUser;
       this.updateDate = updateDate;
       this.updateUser = updateUser;
       this.userMapSocialNetworks = userMapSocialNetworks;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="ID_SOCIAL_NETWORK", unique=true, nullable=false)
    public Long getIdSocialNetwork() {
        return this.idSocialNetwork;
    }
    
    public void setIdSocialNetwork(Long idSocialNetwork) {
        this.idSocialNetwork = idSocialNetwork;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ID_SOCIAL_NETWORK_TYPE")
    public SocialNetworkType getSocialNetworkType() {
        return this.socialNetworkType;
    }
    
    public void setSocialNetworkType(SocialNetworkType socialNetworkType) {
        this.socialNetworkType = socialNetworkType;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ID_USER")
    public User getUser() {
        return this.user;
    }
    
    public void setUser(User user) {
        this.user = user;
    }

    
    @Column(name="SOCIAL_PROFILE_ID")
    public String getSocialProfileId() {
        return this.socialProfileId;
    }
    
    public void setSocialProfileId(String socialProfileId) {
        this.socialProfileId = socialProfileId;
    }

    
    @Column(name="SOCIAL_OAUTH_TOKEN")
    public String getSocialOauthToken() {
        return this.socialOauthToken;
    }
    
    public void setSocialOauthToken(String socialOauthToken) {
        this.socialOauthToken = socialOauthToken;
    }

    
    @Column(name="SOCIAL_OAUTH_SECRET_TOKEN", length=400)
    public String getSocialOauthSecretToken() {
        return this.socialOauthSecretToken;
    }
    
    public void setSocialOauthSecretToken(String socialOauthSecretToken) {
        this.socialOauthSecretToken = socialOauthSecretToken;
    }

    
    @Column(name="SOCIAL_ACCOUNT_NAME")
    public String getSocialAccountName() {
        return this.socialAccountName;
    }
    
    public void setSocialAccountName(String socialAccountName) {
        this.socialAccountName = socialAccountName;
    }

    
    @Column(name="EMAIL_SOCIAL_ACCOUNT")
    public String getEmailSocialAccount() {
        return this.emailSocialAccount;
    }
    
    public void setEmailSocialAccount(String emailSocialAccount) {
        this.emailSocialAccount = emailSocialAccount;
    }

    
    @Column(name="STATUS", length=1)
    public String getStatus() {
        return this.status;
    }
    
    public void setStatus(String status) {
        this.status = status;
    }

    @Basic
	@Temporal(javax.persistence.TemporalType.TIMESTAMP)
    @Column(name="CREATE_DATE", length=0)
    public Date getCreateDate() {
        return this.createDate;
    }
    
    public void setCreateDate(Date createDate) {
        this.createDate = createDate;
    }

    
    @Column(name="CREATE_USER")
    public String getCreateUser() {
        return this.createUser;
    }
    
    public void setCreateUser(String createUser) {
        this.createUser = createUser;
    }

    @Basic
	@Temporal(javax.persistence.TemporalType.TIMESTAMP)
    @Column(name="UPDATE_DATE", length=0)
    public Date getUpdateDate() {
        return this.updateDate;
    }
    
    public void setUpdateDate(Date updateDate) {
        this.updateDate = updateDate;
    }

    
    @Column(name="UPDATE_USER")
    public String getUpdateUser() {
        return this.updateUser;
    }
    
    public void setUpdateUser(String updateUser) {
        this.updateUser = updateUser;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="socialNetwork")
    public List<UserMapSocialNetwork> getUserMapSocialNetworks() {
        return this.userMapSocialNetworks;
    }
    
    public void setUserMapSocialNetworks(List<UserMapSocialNetwork> userMapSocialNetworks) {
        this.userMapSocialNetworks = userMapSocialNetworks;
    }

    /**
     * toString
     * @return String
     */
     public String toString() {
	  StringBuffer buffer = new StringBuffer();

      buffer.append(getClass().getName()).append("@").append(Integer.toHexString(hashCode())).append(" [");
      buffer.append("idSocialNetwork").append("='").append(getIdSocialNetwork()).append("' ");			
      buffer.append("socialNetworkType").append("='").append(getSocialNetworkType()).append("' ");			
      buffer.append("user").append("='").append(getUser()).append("' ");			
      buffer.append("socialProfileId").append("='").append(getSocialProfileId()).append("' ");			
      buffer.append("socialOauthToken").append("='").append(getSocialOauthToken()).append("' ");			
      buffer.append("socialOauthSecretToken").append("='").append(getSocialOauthSecretToken()).append("' ");			
      buffer.append("socialAccountName").append("='").append(getSocialAccountName()).append("' ");			
      buffer.append("emailSocialAccount").append("='").append(getEmailSocialAccount()).append("' ");			
      buffer.append("status").append("='").append(getStatus()).append("' ");			
      buffer.append("createDate").append("='").append(getCreateDate()).append("' ");			
      buffer.append("createUser").append("='").append(getCreateUser()).append("' ");			
      buffer.append("updateDate").append("='").append(getUpdateDate()).append("' ");			
      buffer.append("updateUser").append("='").append(getUpdateUser()).append("' ");			
      buffer.append("]");
      
      return buffer.toString();
     }

   public boolean equals(Object other) {
         if ( (this == other ) ) return true;
		 if ( (other == null ) ) return false;
		 if ( !(other instanceof SocialNetwork) ) return false;
		 SocialNetwork castOther = ( SocialNetwork ) other; 
         
		 return ( (this.getIdSocialNetwork()==castOther.getIdSocialNetwork()) || ( this.getIdSocialNetwork()!=null && castOther.getIdSocialNetwork()!=null && this.getIdSocialNetwork().equals(castOther.getIdSocialNetwork()) ) )
 && ( (this.getSocialNetworkType()==castOther.getSocialNetworkType()) || ( this.getSocialNetworkType()!=null && castOther.getSocialNetworkType()!=null && this.getSocialNetworkType().equals(castOther.getSocialNetworkType()) ) )
 && ( (this.getUser()==castOther.getUser()) || ( this.getUser()!=null && castOther.getUser()!=null && this.getUser().equals(castOther.getUser()) ) )
 && ( (this.getSocialProfileId()==castOther.getSocialProfileId()) || ( this.getSocialProfileId()!=null && castOther.getSocialProfileId()!=null && this.getSocialProfileId().equals(castOther.getSocialProfileId()) ) )
 && ( (this.getSocialOauthToken()==castOther.getSocialOauthToken()) || ( this.getSocialOauthToken()!=null && castOther.getSocialOauthToken()!=null && this.getSocialOauthToken().equals(castOther.getSocialOauthToken()) ) )
 && ( (this.getSocialOauthSecretToken()==castOther.getSocialOauthSecretToken()) || ( this.getSocialOauthSecretToken()!=null && castOther.getSocialOauthSecretToken()!=null && this.getSocialOauthSecretToken().equals(castOther.getSocialOauthSecretToken()) ) )
 && ( (this.getSocialAccountName()==castOther.getSocialAccountName()) || ( this.getSocialAccountName()!=null && castOther.getSocialAccountName()!=null && this.getSocialAccountName().equals(castOther.getSocialAccountName()) ) )
 && ( (this.getEmailSocialAccount()==castOther.getEmailSocialAccount()) || ( this.getEmailSocialAccount()!=null && castOther.getEmailSocialAccount()!=null && this.getEmailSocialAccount().equals(castOther.getEmailSocialAccount()) ) )
 && ( (this.getStatus()==castOther.getStatus()) || ( this.getStatus()!=null && castOther.getStatus()!=null && this.getStatus().equals(castOther.getStatus()) ) )
 && ( (this.getCreateDate()==castOther.getCreateDate()) || ( this.getCreateDate()!=null && castOther.getCreateDate()!=null && this.getCreateDate().equals(castOther.getCreateDate()) ) )
 && ( (this.getCreateUser()==castOther.getCreateUser()) || ( this.getCreateUser()!=null && castOther.getCreateUser()!=null && this.getCreateUser().equals(castOther.getCreateUser()) ) )
 && ( (this.getUpdateDate()==castOther.getUpdateDate()) || ( this.getUpdateDate()!=null && castOther.getUpdateDate()!=null && this.getUpdateDate().equals(castOther.getUpdateDate()) ) )
 && ( (this.getUpdateUser()==castOther.getUpdateUser()) || ( this.getUpdateUser()!=null && castOther.getUpdateUser()!=null && this.getUpdateUser().equals(castOther.getUpdateUser()) ) );
   }
   
   public int hashCode() {
         int result = 17;
         
         result = 37 * result + ( getIdSocialNetwork() == null ? 0 : this.getIdSocialNetwork().hashCode() );
         result = 37 * result + ( getSocialNetworkType() == null ? 0 : this.getSocialNetworkType().hashCode() );
         result = 37 * result + ( getUser() == null ? 0 : this.getUser().hashCode() );
         result = 37 * result + ( getSocialProfileId() == null ? 0 : this.getSocialProfileId().hashCode() );
         result = 37 * result + ( getSocialOauthToken() == null ? 0 : this.getSocialOauthToken().hashCode() );
         result = 37 * result + ( getSocialOauthSecretToken() == null ? 0 : this.getSocialOauthSecretToken().hashCode() );
         result = 37 * result + ( getSocialAccountName() == null ? 0 : this.getSocialAccountName().hashCode() );
         result = 37 * result + ( getEmailSocialAccount() == null ? 0 : this.getEmailSocialAccount().hashCode() );
         result = 37 * result + ( getStatus() == null ? 0 : this.getStatus().hashCode() );
         result = 37 * result + ( getCreateDate() == null ? 0 : this.getCreateDate().hashCode() );
         result = 37 * result + ( getCreateUser() == null ? 0 : this.getCreateUser().hashCode() );
         result = 37 * result + ( getUpdateDate() == null ? 0 : this.getUpdateDate().hashCode() );
         result = 37 * result + ( getUpdateUser() == null ? 0 : this.getUpdateUser().hashCode() );
         
         return result;
   }   


}


