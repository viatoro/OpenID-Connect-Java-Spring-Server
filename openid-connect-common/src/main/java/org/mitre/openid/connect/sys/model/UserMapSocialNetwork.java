package org.mitre.openid.connect.sys.model;



import java.util.Date;

import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;

/**
 * UserMapSocialNetwork generated by hbm2java
 */
@Entity
@Table(name="SYS_M_USER_MAP_SOCIAL_NETWORK"
)
public class UserMapSocialNetwork  implements java.io.Serializable {


     private Long idUserMapSocialNetwork;
     private SocialNetwork socialNetwork;
     private User user;
     private String status;
     private Date createDate;
     private String createUser;
     private Date updateDate;
     private String updateUser;

    public UserMapSocialNetwork() {
    }

	
    public UserMapSocialNetwork(SocialNetwork socialNetwork, User user) {
        this.socialNetwork = socialNetwork;
        this.user = user;
    }
    public UserMapSocialNetwork(SocialNetwork socialNetwork, User user, String status, Date createDate, String createUser, Date updateDate, String updateUser) {
       this.socialNetwork = socialNetwork;
       this.user = user;
       this.status = status;
       this.createDate = createDate;
       this.createUser = createUser;
       this.updateDate = updateDate;
       this.updateUser = updateUser;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="ID_USER_MAP_SOCIAL_NETWORK", unique=true, nullable=false)
    public Long getIdUserMapSocialNetwork() {
        return this.idUserMapSocialNetwork;
    }
    
    public void setIdUserMapSocialNetwork(Long idUserMapSocialNetwork) {
        this.idUserMapSocialNetwork = idUserMapSocialNetwork;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ID_SOCIAL_NETWORK", nullable=false)
    public SocialNetwork getSocialNetwork() {
        return this.socialNetwork;
    }
    
    public void setSocialNetwork(SocialNetwork socialNetwork) {
        this.socialNetwork = socialNetwork;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="ID_USER", nullable=false)
    public User getUser() {
        return this.user;
    }
    
    public void setUser(User user) {
        this.user = user;
    }

    
    @Column(name="STATUS", length=1)
    public String getStatus() {
        return this.status;
    }
    
    public void setStatus(String status) {
        this.status = status;
    }

    @Basic
	@Temporal(javax.persistence.TemporalType.TIMESTAMP)
    @Column(name="CREATE_DATE", length=0)
    public Date getCreateDate() {
        return this.createDate;
    }
    
    public void setCreateDate(Date createDate) {
        this.createDate = createDate;
    }

    
    @Column(name="CREATE_USER")
    public String getCreateUser() {
        return this.createUser;
    }
    
    public void setCreateUser(String createUser) {
        this.createUser = createUser;
    }

    @Basic
	@Temporal(javax.persistence.TemporalType.TIMESTAMP)
    @Column(name="UPDATE_DATE", length=0)
    public Date getUpdateDate() {
        return this.updateDate;
    }
    
    public void setUpdateDate(Date updateDate) {
        this.updateDate = updateDate;
    }

    
    @Column(name="UPDATE_USER")
    public String getUpdateUser() {
        return this.updateUser;
    }
    
    public void setUpdateUser(String updateUser) {
        this.updateUser = updateUser;
    }

    /**
     * toString
     * @return String
     */
     public String toString() {
	  StringBuffer buffer = new StringBuffer();

      buffer.append(getClass().getName()).append("@").append(Integer.toHexString(hashCode())).append(" [");
      buffer.append("idUserMapSocialNetwork").append("='").append(getIdUserMapSocialNetwork()).append("' ");			
      buffer.append("socialNetwork").append("='").append(getSocialNetwork()).append("' ");			
      buffer.append("user").append("='").append(getUser()).append("' ");			
      buffer.append("status").append("='").append(getStatus()).append("' ");			
      buffer.append("createDate").append("='").append(getCreateDate()).append("' ");			
      buffer.append("createUser").append("='").append(getCreateUser()).append("' ");			
      buffer.append("updateDate").append("='").append(getUpdateDate()).append("' ");			
      buffer.append("updateUser").append("='").append(getUpdateUser()).append("' ");			
      buffer.append("]");
      
      return buffer.toString();
     }

   public boolean equals(Object other) {
         if ( (this == other ) ) return true;
		 if ( (other == null ) ) return false;
		 if ( !(other instanceof UserMapSocialNetwork) ) return false;
		 UserMapSocialNetwork castOther = ( UserMapSocialNetwork ) other; 
         
		 return ( (this.getIdUserMapSocialNetwork()==castOther.getIdUserMapSocialNetwork()) || ( this.getIdUserMapSocialNetwork()!=null && castOther.getIdUserMapSocialNetwork()!=null && this.getIdUserMapSocialNetwork().equals(castOther.getIdUserMapSocialNetwork()) ) )
 && ( (this.getSocialNetwork()==castOther.getSocialNetwork()) || ( this.getSocialNetwork()!=null && castOther.getSocialNetwork()!=null && this.getSocialNetwork().equals(castOther.getSocialNetwork()) ) )
 && ( (this.getUser()==castOther.getUser()) || ( this.getUser()!=null && castOther.getUser()!=null && this.getUser().equals(castOther.getUser()) ) )
 && ( (this.getStatus()==castOther.getStatus()) || ( this.getStatus()!=null && castOther.getStatus()!=null && this.getStatus().equals(castOther.getStatus()) ) )
 && ( (this.getCreateDate()==castOther.getCreateDate()) || ( this.getCreateDate()!=null && castOther.getCreateDate()!=null && this.getCreateDate().equals(castOther.getCreateDate()) ) )
 && ( (this.getCreateUser()==castOther.getCreateUser()) || ( this.getCreateUser()!=null && castOther.getCreateUser()!=null && this.getCreateUser().equals(castOther.getCreateUser()) ) )
 && ( (this.getUpdateDate()==castOther.getUpdateDate()) || ( this.getUpdateDate()!=null && castOther.getUpdateDate()!=null && this.getUpdateDate().equals(castOther.getUpdateDate()) ) )
 && ( (this.getUpdateUser()==castOther.getUpdateUser()) || ( this.getUpdateUser()!=null && castOther.getUpdateUser()!=null && this.getUpdateUser().equals(castOther.getUpdateUser()) ) );
   }
   
   public int hashCode() {
         int result = 17;
         
         result = 37 * result + ( getIdUserMapSocialNetwork() == null ? 0 : this.getIdUserMapSocialNetwork().hashCode() );
         result = 37 * result + ( getSocialNetwork() == null ? 0 : this.getSocialNetwork().hashCode() );
         result = 37 * result + ( getUser() == null ? 0 : this.getUser().hashCode() );
         result = 37 * result + ( getStatus() == null ? 0 : this.getStatus().hashCode() );
         result = 37 * result + ( getCreateDate() == null ? 0 : this.getCreateDate().hashCode() );
         result = 37 * result + ( getCreateUser() == null ? 0 : this.getCreateUser().hashCode() );
         result = 37 * result + ( getUpdateDate() == null ? 0 : this.getUpdateDate().hashCode() );
         result = 37 * result + ( getUpdateUser() == null ? 0 : this.getUpdateUser().hashCode() );
         return result;
   }   


}


