package org.mitre.openid.connect.sys.model;



import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;

/**
 * County generated by hbm2java
 */
@Entity
@Table(name="SYS_M_COUNTY"
)
public class County  implements java.io.Serializable {


     private CountyId id;
     private City city;
     private String name;
     private Long indexRow;
     private String code;
     private String code2;
     private String status;
     private Date createDate;
     private String createUser;
     private Date updateDate;
     private String updateUser;
     private List<Address> addresses = new ArrayList<Address>(0);

    public County() {
    }

	
    public County(CountyId id, City city) {
        this.id = id;
        this.city = city;
    }
    public County(CountyId id, City city, String name, Long indexRow, String code, String code2, String status, Date createDate, String createUser, Date updateDate, String updateUser, List<Address> addresses) {
       this.id = id;
       this.city = city;
       this.name = name;
       this.indexRow = indexRow;
       this.code = code;
       this.code2 = code2;
       this.status = status;
       this.createDate = createDate;
       this.createUser = createUser;
       this.updateDate = updateDate;
       this.updateUser = updateUser;
       this.addresses = addresses;
    }
   
     @EmbeddedId

    
    @AttributeOverrides( {
        @AttributeOverride(name="idCountry", column=@Column(name="ID_COUNTRY", nullable=false) ), 
        @AttributeOverride(name="idProvince", column=@Column(name="ID_PROVINCE", nullable=false) ), 
        @AttributeOverride(name="idCity", column=@Column(name="ID_CITY", nullable=false) ), 
        @AttributeOverride(name="idCounty", column=@Column(name="ID_COUNTY", nullable=false) ) } )
    public CountyId getId() {
        return this.id;
    }
    
    public void setId(CountyId id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumns( { 
        @JoinColumn(name="ID_COUNTRY", referencedColumnName="ID_CITY", nullable=false, insertable=false, updatable=false), 
        @JoinColumn(name="ID_PROVINCE", referencedColumnName="ID_PROVINCE", nullable=false, insertable=false, updatable=false), 
        @JoinColumn(name="ID_CITY", referencedColumnName="ID_COUNTRY", nullable=false, insertable=false, updatable=false) } )
    public City getCity() {
        return this.city;
    }
    
    public void setCity(City city) {
        this.city = city;
    }

    
    @Column(name="NAME")
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="INDEX_ROW")
    public Long getIndexRow() {
        return this.indexRow;
    }
    
    public void setIndexRow(Long indexRow) {
        this.indexRow = indexRow;
    }

    
    @Column(name="CODE")
    public String getCode() {
        return this.code;
    }
    
    public void setCode(String code) {
        this.code = code;
    }

    
    @Column(name="CODE2", length=2)
    public String getCode2() {
        return this.code2;
    }
    
    public void setCode2(String code2) {
        this.code2 = code2;
    }

    
    @Column(name="STATUS", length=1)
    public String getStatus() {
        return this.status;
    }
    
    public void setStatus(String status) {
        this.status = status;
    }

    @Basic
	@Temporal(javax.persistence.TemporalType.TIMESTAMP)
    @Column(name="CREATE_DATE", length=0)
    public Date getCreateDate() {
        return this.createDate;
    }
    
    public void setCreateDate(Date createDate) {
        this.createDate = createDate;
    }

    
    @Column(name="CREATE_USER")
    public String getCreateUser() {
        return this.createUser;
    }
    
    public void setCreateUser(String createUser) {
        this.createUser = createUser;
    }

    @Basic
	@Temporal(javax.persistence.TemporalType.TIMESTAMP)
    @Column(name="UPDATE_DATE", length=0)
    public Date getUpdateDate() {
        return this.updateDate;
    }
    
    public void setUpdateDate(Date updateDate) {
        this.updateDate = updateDate;
    }

    
    @Column(name="UPDATE_USER")
    public String getUpdateUser() {
        return this.updateUser;
    }
    
    public void setUpdateUser(String updateUser) {
        this.updateUser = updateUser;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="county")
    public List<Address> getAddresses() {
        return this.addresses;
    }
    
    public void setAddresses(List<Address> addresses) {
        this.addresses = addresses;
    }

    /**
     * toString
     * @return String
     */
     public String toString() {
	  StringBuffer buffer = new StringBuffer();

      buffer.append(getClass().getName()).append("@").append(Integer.toHexString(hashCode())).append(" [");
      buffer.append("id").append("='").append(getId()).append("' ");			
      buffer.append("city").append("='").append(getCity()).append("' ");			
      buffer.append("name").append("='").append(getName()).append("' ");			
      buffer.append("indexRow").append("='").append(getIndexRow()).append("' ");			
      buffer.append("code").append("='").append(getCode()).append("' ");			
      buffer.append("code2").append("='").append(getCode2()).append("' ");			
      buffer.append("status").append("='").append(getStatus()).append("' ");			
      buffer.append("createDate").append("='").append(getCreateDate()).append("' ");			
      buffer.append("createUser").append("='").append(getCreateUser()).append("' ");			
      buffer.append("updateDate").append("='").append(getUpdateDate()).append("' ");			
      buffer.append("updateUser").append("='").append(getUpdateUser()).append("' ");			
      buffer.append("]");
      
      return buffer.toString();
     }

   public boolean equals(Object other) {
         if ( (this == other ) ) return true;
		 if ( (other == null ) ) return false;
		 if ( !(other instanceof County) ) return false;
		 County castOther = ( County ) other; 
         
		 return ( (this.getId()==castOther.getId()) || ( this.getId()!=null && castOther.getId()!=null && this.getId().equals(castOther.getId()) ) )
 && ( (this.getCity()==castOther.getCity()) || ( this.getCity()!=null && castOther.getCity()!=null && this.getCity().equals(castOther.getCity()) ) )
 && ( (this.getName()==castOther.getName()) || ( this.getName()!=null && castOther.getName()!=null && this.getName().equals(castOther.getName()) ) )
 && ( (this.getIndexRow()==castOther.getIndexRow()) || ( this.getIndexRow()!=null && castOther.getIndexRow()!=null && this.getIndexRow().equals(castOther.getIndexRow()) ) )
 && ( (this.getCode()==castOther.getCode()) || ( this.getCode()!=null && castOther.getCode()!=null && this.getCode().equals(castOther.getCode()) ) )
 && ( (this.getCode2()==castOther.getCode2()) || ( this.getCode2()!=null && castOther.getCode2()!=null && this.getCode2().equals(castOther.getCode2()) ) )
 && ( (this.getStatus()==castOther.getStatus()) || ( this.getStatus()!=null && castOther.getStatus()!=null && this.getStatus().equals(castOther.getStatus()) ) )
 && ( (this.getCreateDate()==castOther.getCreateDate()) || ( this.getCreateDate()!=null && castOther.getCreateDate()!=null && this.getCreateDate().equals(castOther.getCreateDate()) ) )
 && ( (this.getCreateUser()==castOther.getCreateUser()) || ( this.getCreateUser()!=null && castOther.getCreateUser()!=null && this.getCreateUser().equals(castOther.getCreateUser()) ) )
 && ( (this.getUpdateDate()==castOther.getUpdateDate()) || ( this.getUpdateDate()!=null && castOther.getUpdateDate()!=null && this.getUpdateDate().equals(castOther.getUpdateDate()) ) )
 && ( (this.getUpdateUser()==castOther.getUpdateUser()) || ( this.getUpdateUser()!=null && castOther.getUpdateUser()!=null && this.getUpdateUser().equals(castOther.getUpdateUser()) ) );
   }
   
   public int hashCode() {
         int result = 17;
         
         result = 37 * result + ( getId() == null ? 0 : this.getId().hashCode() );
         result = 37 * result + ( getCity() == null ? 0 : this.getCity().hashCode() );
         result = 37 * result + ( getName() == null ? 0 : this.getName().hashCode() );
         result = 37 * result + ( getIndexRow() == null ? 0 : this.getIndexRow().hashCode() );
         result = 37 * result + ( getCode() == null ? 0 : this.getCode().hashCode() );
         result = 37 * result + ( getCode2() == null ? 0 : this.getCode2().hashCode() );
         result = 37 * result + ( getStatus() == null ? 0 : this.getStatus().hashCode() );
         result = 37 * result + ( getCreateDate() == null ? 0 : this.getCreateDate().hashCode() );
         result = 37 * result + ( getCreateUser() == null ? 0 : this.getCreateUser().hashCode() );
         result = 37 * result + ( getUpdateDate() == null ? 0 : this.getUpdateDate().hashCode() );
         result = 37 * result + ( getUpdateUser() == null ? 0 : this.getUpdateUser().hashCode() );
         
         return result;
   }   


}


